{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelectorAll","busqueda","categoria_id","dia","dias","inputHiddenDia","querySelector","inputHiddenHora","categoria","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","classList","add","remove","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHoraDisponible","json","buscarEvento","horaPreviaSeleccionada","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","buscarPonente","length","expresion","RegExp","ponente","nombre","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","ponenteId","id","onclick","seleccionarPonente","appendChild","mensaje","mostrarPonentes","ponentePrevio","respuesta","arrayPonentes","trim","apellido","formatearPonentes","obtenerPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelectorAll('#horas');\r\n\r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n\r\n        const categoria = document.querySelector(\"[name='categoria_id']\");\r\n\r\n        dias.forEach(dia => {\r\n            dia.addEventListener('change', terminoBusqueda);\r\n        });\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n\r\n\r\n        function terminoBusqueda(e) {\r\n            \r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //reseteamos el valor de hora\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEvento();\r\n        }\r\n\r\n        async function buscarEvento() {\r\n\r\n            const {categoria_id,dia} = busqueda;\r\n            const url = `/api/eventos?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHoraDisponible(eventos);\r\n        }\r\n\r\n        function obtenerHoraDisponible(eventos) {\r\n\r\n            //RESETEAMOS LA CLASE SELECTOR DESHABILITADO\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitado'));\r\n            listadoHoras.forEach(li => li.classList.remove('horas__hora--seleccionada'));\r\n\r\n            //Revisar los eventos\r\n            const horasTomadas = eventos.map(evento => evento.hora_id );\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitado'));\r\n\r\n            \r\n\r\n            const horasDisponibles = document.querySelectorAll(\"#horas li:not(.horas__hora--deshabilitado)\");\r\n\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click',seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            //Eliminar horaSeleccionadaPrevia\r\n            const horaPreviaSeleccionada = document.querySelector(\".horas__hora--seleccionada\");\r\n\r\n            if(horaPreviaSeleccionada) {\r\n                horaPreviaSeleccionada.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            //Añadimos clase seleccionada\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Añadimos el valor de dia al input hidden\r\n            inputHiddenDia.value = document.querySelector(\"[name='dia']:checked\").value;\r\n        }\r\n    }\r\n\r\n\r\n})();","(function() {\r\n    \r\n    const ponentesInput = document.querySelector(\"#ponentes\");\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector(\"[name='ponente_id']\");\r\n\r\n        obtenerPonentes();\r\n\r\n        async function obtenerPonentes() {\r\n            const url = '/api/ponentes';\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n\r\n            ponentesInput.addEventListener('input',buscarPonente);\r\n        }\r\n\r\n        function buscarPonente(e) {\r\n\r\n            ponentesFiltrados = [];\r\n\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3) {\r\n\r\n                const expresion = new RegExp(busqueda,'i');\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                });\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    //Añadir al dom\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const mensaje = document.createElement('P');\r\n                mensaje.classList.add('listado-ponentes__no-resultado');\r\n                mensaje.textContent = 'No hay resultados para tu búsqueda';\r\n\r\n                //Añadir al dom\r\n                listadoPonentes.appendChild(mensaje);\r\n\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            const ponente = e.target;\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar los valores del input hidden\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) { \r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n            actualizarInputHidden();\r\n        }   \r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n           tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})();"]}